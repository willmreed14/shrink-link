<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>URL Shortener</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" 
          rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
          crossorigin="anonymous">
</head>

<body>
<div class="container">

    <h1>URL Shortener</h1>

    <!-- Authentication Controls -->
    <div id="authControls">
        <% if (!user) { %>
            <button id="signIn" class="btn btn-primary">Sign In</button>
        <% } else { %>
            <p id="welcomeMessage">Welcome, <strong><%= user.email %></strong>!</p>
            <button id="signOut" class="btn btn-danger">Sign Out</button>
        <% } %>
    </div>


    <!-- Warning message for non-authenticated users -->
    <div id="authWarning" class="alert alert-warning">You must be signed in to shorten a URL.</div>

    <!-- URL Shortening Form -->
    <form id="shortenForm" class="my-4 d-flex">
        <label for="fullUrl" class="visually-hidden">Url</label>
        <input 
            required
            placeholder="Url" 
            type="url" 
            name="fullUrl" 
            id="fullUrl"
            class="form-control flex-grow-1 me-2">
        <button id="shrinkButton" class="btn btn-success" type="submit">Shrink</button>
    </form>

    <!-- Table to display shortened URLs -->
    <div class="table-responsive">
        <table class="table table-striped table-responsive text-nowrap">
            <thead>
                <tr>
                    <th>Full URL</th>
                    <th>Short URL</th>
                    <th>Clicks</th>
                </tr>
            </thead>
            <tbody>
                <% shortUrls.forEach(shortUrl => { %>
                <tr>
                    <td>
                        <a href="<%= shortUrl.full %>" target="_blank" rel="noopener noreferrer">
                            <%= shortUrl.full.length > 30 ? shortUrl.full.slice(0, 30) + '...' : shortUrl.full %>
                        </a>
                    </td>
                    <td>
                        <a href="/<%= shortUrl.short %>" target="_blank" rel="noopener noreferrer">
                            <%= shortUrl.short %>
                        </a>
                    </td>
                    <td><%= shortUrl.clicks %></td>
                </tr>
                <% }) %>
            </tbody>
        </table>
    </div>
</div> <!-- Close Container -->

<!-- JavaScript -->
<script type="module">
    import { userManager } from "/main.js";

    async function checkAuthStatus() {
    const user = await userManager.getUser();
    if (user) {
        console.log("✅ User is signed in:", user);
        localStorage.setItem("access_token", user.access_token);
        localStorage.setItem("id_token", user.id_token);
        localStorage.setItem("user_email", user.profile.email);

        // Hide Sign-In Button & Remove Warning
        const signInButton = document.getElementById("signIn");
        if (signInButton) signInButton.style.display = "none";

        const warning = document.getElementById("authWarning");
        if (warning) warning.style.display = "none";

        // Show Welcome Message
        const welcomeMessage = document.getElementById("welcomeMessage");
        if (welcomeMessage) {
            welcomeMessage.textContent = `Welcome, ${user.profile.email}!`;
            }
        }
    }

    checkAuthStatus();

    document.getElementById("shortenForm").addEventListener("submit", async function (event) {
    event.preventDefault();

    const accessToken = localStorage.getItem("access_token");
    if (!accessToken) {
        alert("You must be signed in to shorten a URL.");
        return;
    }

    const fullUrl = document.getElementById("fullUrl").value;
    if (!fullUrl) return;

    try {
        const response = await fetch("/shortUrls", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${accessToken}`
            },
            body: JSON.stringify({ fullUrl })
        });

        if (response.ok) {
            const newShortUrl = await response.json(); // Get the new shortened URL from response
            console.log("✅ Successfully shortened URL:", newShortUrl);

            // Add new shortened URL to the table dynamically
            const tableBody = document.querySelector("tbody");
            const newRow = document.createElement("tr");
            newRow.innerHTML = `
                <td><a href="${newShortUrl.full}" target="_blank">${newShortUrl.full.length > 30 ? newShortUrl.full.slice(0, 30) + '...' : newShortUrl.full}</a></td>
                <td><a href="/${newShortUrl.short}" target="_blank">${newShortUrl.short}</a></td>
                <td>0</td>
            `;
            tableBody.appendChild(newRow);

            // Clear input field
            document.getElementById("fullUrl").value = "";
        } else {
            const errorText = await response.text();
            console.error("❌ Server Response:", errorText);
            alert(`Failed to shorten URL: ${errorText}`);
        }
    } catch (error) {
        console.error("❌ Fetch Error:", error);
        alert("An error occurred. Please try again.");
    }
});
</script>
<script type="module">
    import { userManager } from "/main.js";

    async function checkAuthStatus() {
        const user = await userManager.getUser();
        if (user) {
            console.log("✅ User is signed in:", user);
            localStorage.setItem("access_token", user.access_token);
            localStorage.setItem("id_token", user.id_token);
            localStorage.setItem("user_email", user.profile.email);

            // Hide Sign-In Button & Remove Warning
            const signInButton = document.getElementById("signIn");
            if (signInButton) signInButton.style.display = "none";

            const warning = document.getElementById("authWarning");
            if (warning) warning.style.display = "none";

            // Show Welcome Message
            const welcomeMessage = document.getElementById("welcomeMessage");
            if (welcomeMessage) {
                welcomeMessage.textContent = `Welcome, ${user.profile.email}!`;
            }

            // ✅ Fetch and display user's short URLs
            fetchUserShortUrls(user.access_token);
        }
    }

    async function fetchUserShortUrls(token) {
        try {
            const response = await fetch("/user/shortUrls", {
                method: "GET",
                headers: {
                    "Authorization": `Bearer ${token}`
                }
            });

            if (!response.ok) {
                throw new Error("Failed to fetch user URLs");
            }

            const userShortUrls = await response.json();
            console.log("✅ Fetched user URLs:", userShortUrls);

            // ✅ Populate table with user's URLs
            const tableBody = document.querySelector("tbody");
            tableBody.innerHTML = ""; // Clear existing rows

            userShortUrls.forEach(shortUrl => {
                const newRow = document.createElement("tr");
                newRow.innerHTML = `
                    <td><a href="${shortUrl.full}" target="_blank">${shortUrl.full.length > 30 ? shortUrl.full.slice(0, 30) + '...' : shortUrl.full}</a></td>
                    <td><a href="/${shortUrl.short}" target="_blank">${shortUrl.short}</a></td>
                    <td>${shortUrl.clicks}</td>
                `;
                tableBody.appendChild(newRow);
            });
        } catch (error) {
            console.error("❌ Error fetching user URLs:", error);
        }
    }

    checkAuthStatus();
</script>
<script type="module">
    import { userManager } from "/main.js";

    async function checkAuthStatus() {
        const user = await userManager.getUser();
        if (user) {
            console.log("✅ User is signed in:", user);
            localStorage.setItem("access_token", user.access_token);
            localStorage.setItem("id_token", user.id_token);
            localStorage.setItem("user_email", user.profile.email);

            // Hide Sign-In Button, Show Sign-Out Button, Remove Warning
            document.getElementById("signIn").style.display = "none";
            document.getElementById("authWarning").style.display = "none";
            document.getElementById("signOut").style.display = "block";
            document.getElementById("welcomeMessage").textContent = `Welcome, ${user.profile.email}!`;

            // Fetch user links
            fetchUserShortUrls(user.access_token);
        }
    }

    async function signOutUser() {
        try {
            await userManager.signoutRedirect(); // Redirect to Cognito's sign-out page
            localStorage.clear(); // Clear stored tokens
            window.location.href = "/"; // Redirect back to home page
        } catch (error) {
            console.error("❌ Error signing out:", error);
        }
    }

    document.getElementById("signOut")?.addEventListener("click", signOutUser);

    checkAuthStatus();
</script>


</body>
</html>
